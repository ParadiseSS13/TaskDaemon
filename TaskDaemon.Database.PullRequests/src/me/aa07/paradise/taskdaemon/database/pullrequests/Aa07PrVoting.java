/*
 * This file is generated by jOOQ.
 */
package me.aa07.paradise.taskdaemon.database.pullrequests;


import java.util.Arrays;
import java.util.List;

import me.aa07.paradise.taskdaemon.database.pullrequests.tables.MemberCache;
import me.aa07.paradise.taskdaemon.database.pullrequests.tables.Notes;
import me.aa07.paradise.taskdaemon.database.pullrequests.tables.Prs;
import me.aa07.paradise.taskdaemon.database.pullrequests.tables.TmRequests;
import me.aa07.paradise.taskdaemon.database.pullrequests.tables.Votes;
import me.aa07.paradise.taskdaemon.database.pullrequests.tables.VotesNew;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Aa07PrVoting extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>aa07_pr_voting</code>
     */
    public static final Aa07PrVoting AA07_PR_VOTING = new Aa07PrVoting();

    /**
     * The table <code>aa07_pr_voting.member_cache</code>.
     */
    public final MemberCache MEMBER_CACHE = MemberCache.MEMBER_CACHE;

    /**
     * The table <code>aa07_pr_voting.notes</code>.
     */
    public final Notes NOTES = Notes.NOTES;

    /**
     * The table <code>aa07_pr_voting.prs</code>.
     */
    public final Prs PRS = Prs.PRS;

    /**
     * The table <code>aa07_pr_voting.tm_requests</code>.
     */
    public final TmRequests TM_REQUESTS = TmRequests.TM_REQUESTS;

    /**
     * The table <code>aa07_pr_voting.votes</code>.
     */
    public final Votes VOTES = Votes.VOTES;

    /**
     * The table <code>aa07_pr_voting.votes_new</code>.
     */
    public final VotesNew VOTES_NEW = VotesNew.VOTES_NEW;

    /**
     * No further instances allowed
     */
    private Aa07PrVoting() {
        super("aa07_pr_voting", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            MemberCache.MEMBER_CACHE,
            Notes.NOTES,
            Prs.PRS,
            TmRequests.TM_REQUESTS,
            Votes.VOTES,
            VotesNew.VOTES_NEW
        );
    }
}
